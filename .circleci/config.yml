# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

filters_always: &filters_always
  filters:
    tags:
      only: /.*/

filters_publish: &filters_publish
  filters:
    tags:
      only: /^v[0-9].*/
    branches:
      ignore: /.*/

executors:
  docker-go:
    docker:
      - image: cimg/go:1.24

jobs:
  build_agent:
    executor: docker-go
    steps:
      - setup_remote_docker
      - checkout
      - run: go install github.com/google/ko@latest
      - run: echo "VERSION=$(cat version.txt | tr -d '\n')" >> $BASH_ENV
      - run: make verify-licenses
      - run: ./build/build.sh
      - run: ./build/test.sh .
      - run: e2e-tests/test.sh

  publish_dockerhub:
    executor: docker-go
    steps:
      - setup_remote_docker
      - checkout
      - run: go install github.com/google/ko@latest
      - run: echo "VERSION=$(cat version.txt | tr -d '\n')" >> $BASH_ENV
      - run:
          name: "publish image to Docker Hub"
          environment:
            KO_DOCKER_REPO: honeycombio
          command: |
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin;
            ./build/build.sh

  publish_github:
    docker:
      - image: cibuilds/github:0.13.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Publish Release on GitHub"
          command: |
            echo "about to publish to tag ${CIRCLE_TAG}"
            ghr --draft -n ${CIRCLE_TAG} -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG}

workflows:
  version: 2
  build:
    jobs:
      - build_agent:
          <<: *filters_always
      - publish_dockerhub:
          <<: *filters_publish
          context: Honeycomb Secrets for Public Repos
          requires:
            - build_agent
      - publish_github:
          <<: *filters_publish
          context: Honeycomb Secrets for Public Repos
          requires:
            - build_agent
