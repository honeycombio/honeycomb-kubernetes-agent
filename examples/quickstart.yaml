# Service account for the agent
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: honeycomb-serviceaccount
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: honeycomb-serviceaccount
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: honeycomb-serviceaccount
subjects:
- kind: ServiceAccount
  name: honeycomb-serviceaccount
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: honeycomb-serviceaccount
  namespace: kube-system
rules:
  - apiGroups:
      - "*"
    resources:
      - pods
      - nodes/stats
      - nodes/proxy
    verbs:
      - list
      - watch
      - get

# ConfigMap specifying which logs the agent should watch
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: honeycomb-agent-config
  namespace: kube-system
data:
  config.yaml: |
    apiHost: https://api.honeycomb.io/
    watchers:
      - dataset: kubernetes-logs
        labelSelector: component=kube-controller-manager
        namespace: kube-system
        parser: glog
      - dataset: kubernetes-logs
        labelSelector: component=kube-scheduler
        namespace: kube-system
        parser: glog
    verbosity: info
    splitLogging: false

    metrics:
      clusterName: k8s-cluster
      dataset: kubernetes-metrics
      enabled: true
      metricGroups:
      - node
      - pod

# Daemonset
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: honeycomb-agent
    kubernetes.io/cluster-service: 'true'
    version: v2.1.0
  name: honeycomb-agent-v2.1.0
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: honeycomb-agent
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: honeycomb-agent
        kubernetes.io/cluster-service: 'true'
        version: v2.1.0
    spec:
      tolerations:
        - operator: Exists
          effect: NoSchedule
      containers:
      - env:
        - name: HONEYCOMB_APIKEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: honeycomb
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: honeycombio/honeycomb-kubernetes-agent:2.1.0
        imagePullPolicy: IfNotPresent
        name: honeycomb-agent
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - mountPath: "/etc/honeycomb"
          name: config
          readOnly: false
        - mountPath: "/var/log"
          name: varlog
          readOnly: false
        - mountPath: "/var/lib/docker/containers"
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: honeycomb-serviceaccount
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: honeycomb-agent-config
        name: config
      - hostPath:
          path: "/var/log"
        name: varlog
      - hostPath:
          path: "/var/lib/docker/containers"
        name: varlibdockercontainers
